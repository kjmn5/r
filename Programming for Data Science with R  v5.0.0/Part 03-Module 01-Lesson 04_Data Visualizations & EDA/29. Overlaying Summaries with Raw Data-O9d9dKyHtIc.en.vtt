WEBVTT
Kind: captions
Language: en

00:00:00.380 --> 00:00:03.230
Ggplot allows us to easily create various summaries of

00:00:03.230 --> 00:00:06.180
our data and plot them. This could be especially useful

00:00:06.180 --> 00:00:09.810
for quick exploration and for combining plots of raw data,

00:00:09.810 --> 00:00:13.900
like our original scatter plot with displaying summaries. This plot

00:00:13.900 --> 00:00:16.490
is one of those displaying summaries and I want to

00:00:16.490 --> 00:00:18.920
be able to display it over the original plot we

00:00:18.920 --> 00:00:22.570
had for friend_count versus age. Let's see that first original

00:00:22.570 --> 00:00:25.810
scatter plot again. Now since all these points are black,

00:00:25.810 --> 00:00:27.960
I'm going to change the color of these. So that way when

00:00:27.960 --> 00:00:30.730
I overlay the summary, it's easier to see. I'm going to make

00:00:30.730 --> 00:00:34.016
the color here orange. So now, I've got my scatter plot

00:00:34.016 --> 00:00:36.980
and I want to overlay the summary that we have from before.

00:00:36.980 --> 00:00:40.258
I want to put this on top of this. I can add

00:00:40.258 --> 00:00:44.540
a geom_line to our plot to do so. Here I'm going to

00:00:44.540 --> 00:00:47.590
pass the parameter stat and set it equal to summary, and

00:00:47.590 --> 00:00:51.010
I'm going to give it a function for y. The fun.y parameter takes

00:00:51.010 --> 00:00:53.090
any type of function, so that way we can apply it

00:00:53.090 --> 00:00:55.520
to the y values. In this case, I want to take

00:00:55.520 --> 00:00:58.530
the mean. And there it is, this is my summary line

00:00:58.530 --> 00:01:01.800
are the mean friend count by age, over my raw data

00:01:01.800 --> 00:01:05.825
or my scatter plot. This plot immediately reveals the increase in

00:01:05.825 --> 00:01:09.460
friend_count for very young users and the subsequent decrease right after

00:01:09.460 --> 00:01:12.480
that. We can add even more detail to this plot by

00:01:12.480 --> 00:01:16.290
displaying multiple summaries at the same time. Despite having this conditional

00:01:16.290 --> 00:01:20.150
mean plotted, we can't immediately see how dispersed around

00:01:20.150 --> 00:01:22.800
the mean. For example, are the median friend_counts for

00:01:22.800 --> 00:01:25.440
age 30 in this region or did they span

00:01:25.440 --> 00:01:28.280
all the way up to 2,000? Certainly we can see

00:01:28.280 --> 00:01:31.290
that most users, even young ones, don't have more

00:01:31.290 --> 00:01:34.970
than 2,000 friends. We can help ourselves understand this conditional

00:01:34.970 --> 00:01:38.030
distribution of friend_counts by also plotting quantiles of the

00:01:38.030 --> 00:01:41.916
data. So let's use the 10%, 50% or median and

00:01:41.916 --> 00:01:46.520
90% quantiles. We'll start by adding our 10% quantile summary line

00:01:46.520 --> 00:01:50.060
to this plot. So I'll add another geom_line, I'll pass it

00:01:50.060 --> 00:01:52.570
a stat of summary and then for the function, I'm going to

00:01:52.570 --> 00:01:55.320
pass it quantile instead of mean. I need to set the

00:01:55.320 --> 00:01:59.145
probability equal to one tenth or 0.1. This code gives me

00:01:59.145 --> 00:02:02.170
10% quantile on my plot. Now I want it to appear

00:02:02.170 --> 00:02:04.550
different from the mean. So, I'm going to add some details to

00:02:04.550 --> 00:02:07.050
color it and to make it dash. I'll set the line type

00:02:07.050 --> 00:02:08.860
table to two to make it dash and I'll set the

00:02:08.860 --> 00:02:13.114
color equal to blue. There that's much better. Now to add

00:02:13.114 --> 00:02:16.029
the 90% quantile, I would just need to change the probability

00:02:16.029 --> 00:02:19.130
here to 0.9 instead of 0.1. So I'm going to add another

00:02:19.130 --> 00:02:22.660
line. I'll use the same parameters as before and then just

00:02:22.660 --> 00:02:26.080
change the probability. So here we can see that 90% of

00:02:26.080 --> 00:02:29.090
users have friend counts below this line. The last thing I'll

00:02:29.090 --> 00:02:32.670
do is add in the 50% mark, which is the median. Now

00:02:32.670 --> 00:02:36.310
I won't make this geom_line dash, but I will make the color blue.

00:02:36.310 --> 00:02:38.950
Now this is quite a plot. I want you to try creating this

00:02:38.950 --> 00:02:42.890
same plot in R and try adding a coord_cartesian layer to zoom in

00:02:42.890 --> 00:02:44.490
on different parts of this graph.

00:02:44.490 --> 00:02:46.600
Look at the documentation for coord_cartesian if

00:02:46.600 --> 00:02:49.870
you need help. And definitely be sure that you understand all of this

00:02:49.870 --> 00:02:52.600
code. I know that there is a lot going on here. Once you've

00:02:52.600 --> 00:02:55.420
got a strong idea of this plot and you've explored it a bit,

00:02:55.420 --> 00:02:58.140
I want you to make some observations about the plot. What do you notice?

