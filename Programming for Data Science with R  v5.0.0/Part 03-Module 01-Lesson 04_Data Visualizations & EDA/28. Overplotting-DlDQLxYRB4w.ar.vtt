WEBVTT
Kind: captions
Language: ar

00:00:00.220 --> 00:00:02.500
قد تلاحظ الآن أن بعض هذه النقاط تنتشر

00:00:02.500 --> 00:00:05.440
بعيدًا عن بعضها البعض، بينما يتم تكديس بعض النقاط
الأخرى

00:00:05.440 --> 00:00:08.340
فوق بعضها البعض. تُعد هذه المساحة من الرسم البياني
أكثر من

00:00:08.340 --> 00:00:11.750
مجرد رسم. يؤدي تزايد الرسم إلى صعوبة معرفة عدد
النقاط

00:00:11.750 --> 00:00:15.180
في كل منطقة. لذا يمكننا تعيين شفافية

00:00:15.180 --> 00:00:18.880
النقاط باستخدام معلمة alpha ونقطة geom. سأضيف ذلك

00:00:18.880 --> 00:00:20.800
إلى سطر جديد حتى نتمكن من رؤية طبقاتنا

00:00:20.800 --> 00:00:24.970
بوضوح أكبر. بعد ذلك، يمكنني تعيين المعلمة alpha لكي
تساوي 1 على 20.

00:00:24.970 --> 00:00:27.760
وهذا يعني أن الأمر سيتطلب 20 نقطة

00:00:27.760 --> 00:00:30.950
لتكون مكافئة لإحدى هذه النقاط السوداء. كتابة

00:00:30.950 --> 00:00:32.659
هذه التعليمات البرمجية، يمكننا ملاحظة أن الجزء الأكبر
من

00:00:32.659 --> 00:00:36.370
بياناتنا يقع ضمن الحد الأقصى 1000 لعدد الأصدقاء.
الآن

00:00:36.370 --> 00:00:39.550
دعونا أيضًا نضيف القليل من التشويه هنا كذلك.
يمكننا

00:00:39.550 --> 00:00:44.150
استبدال geom_point بـ geom_jitter. يمثل العمر متغير
مستمر

00:00:44.150 --> 00:00:47.160
ولكنك لا تملك إلا قيمًا صحيحة، لذلك يمكننا

00:00:47.160 --> 00:00:50.030
مشاهدة هذه الأعمدة مرتبة بشكل مثالي. وهذا ليس

00:00:50.030 --> 00:00:54.830
انعكاسًا حقيقيًا للعمر. يجب أن تبدو هذه الأعمدة
خاطئة بشكل بديهي

00:00:54.830 --> 00:00:57.010
ونريد التأكد من إمكانية مشاهدة المزيد

00:00:57.010 --> 00:00:59.870
من النقاط. لذا، باستخدام التشويه، يمكننا إضافة بعض

00:00:59.870 --> 00:01:02.310
الضوضاء إلى كل عمر حتى نحصل على صورة أوضح

00:01:02.310 --> 00:01:05.630
للعلاقة بين العمر وعدد الأصدقاء. ومن خلال كتابة

00:01:05.630 --> 00:01:07.830
التعليمات البرمجية باستخدام geom_jitter، يمكننا
معرفة أننا نحصل

00:01:07.830 --> 00:01:11.320
على توزيع أكثر تفريقًا. ما الأشياء التي تظهر لك في
هذا

00:01:11.320 --> 00:01:14.650
الرسم الجديد؟ ضع في اعتبارك أنه تم تعيين alpha على

00:01:14.650 --> 00:01:17.359
1/20 أو 0.05.

