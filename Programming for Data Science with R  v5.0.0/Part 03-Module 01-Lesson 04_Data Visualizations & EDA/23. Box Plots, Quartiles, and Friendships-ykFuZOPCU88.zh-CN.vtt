WEBVTT
Kind: captions
Language: zh-CN

00:00:00.140 --> 00:00:02.330
要回答这个问题 我们编写代码

00:00:02.330 --> 00:00:04.800
看起来非常类似以前的代码

00:00:04.800 --> 00:00:07.660
我们想要创建一个箱线图 来比较

00:00:07.660 --> 00:00:11.220
男性用户和女性用户发起的友谊数的分布

00:00:11.220 --> 00:00:13.960
我们提醒自己在DataFrame内有哪些变量

00:00:13.960 --> 00:00:17.660
对于好友请求 我使用 friendships_initiated 听起来不错

00:00:17.660 --> 00:00:20.630
要绘制箱线图 我为 x 传递变量性别

00:00:20.630 --> 00:00:23.875
因为这是我的类别变量 然后我将给 y 传递

00:00:23.875 --> 00:00:27.190
friendships_initiated 现在我需要对DataFrame划分子集 就像以前一样

00:00:27.190 --> 00:00:29.550
然后我需要告诉 qplot 需要箱线图

00:00:29.550 --> 00:00:31.990
所以设置 geom  

00:00:31.990 --> 00:00:34.990
观察这幅图 可以看到大多数用户发起 500 以下好友请求

00:00:34.990 --> 00:00:38.120
我们将 y limb 设置为 0 作为我们的最小值

00:00:38.120 --> 00:00:42.020
将 500 作为我们的最大值 所以我添加了 cored_cartesian 层

00:00:42.020 --> 00:00:45.120
并设置限制 非常接近 

00:00:45.120 --> 00:00:48.890
但是看起来女性的好友请求数稍高

00:00:48.890 --> 00:00:52.250
因为女性的这条中位数黑线稍高于男性的这条中位数黑线

00:00:52.250 --> 00:00:54.890
现在 这可能太接近了而不好分辨

00:00:54.890 --> 00:00:57.250
所以 我们再放大 这次

00:00:57.250 --> 00:01:00.520
我们将上限更改为 150 是的 看起来

00:01:00.520 --> 00:01:04.340
女性发起的好友数平均稍高些

00:01:04.340 --> 00:01:06.810
我们也用数字汇总来检查这一点

00:01:06.810 --> 00:01:09.990
可以使用 by 命令并按性别划分 friendships_initiated 然后找到汇总

00:01:09.990 --> 00:01:14.010
我将取 friendships_initiated 并按照性别划分

00:01:14.010 --> 00:01:17.320
然后运行汇总 这就是我们的输出

00:01:17.320 --> 00:01:20.400
可以看到女性的中位数是 49 

00:01:20.400 --> 00:01:23.420
而男性的中位数是 44 你可能在怀疑

00:01:23.420 --> 00:01:26.000
如果可以通过数字汇总来回答这个问题

00:01:26.000 --> 00:01:29.240
为什么开始还要创建这个箱线图

00:01:29.240 --> 00:01:32.810
唔 它可以帮助我们理解数据的分布

00:01:32.810 --> 00:01:35.160
在这个箱线图的案例中 我们可以看出

00:01:35.160 --> 00:01:39.310
我们的分类变量中每个分段的中间 50% 值

00:01:39.310 --> 00:01:41.590
箱线图还能让我们感知异常数值

00:01:41.590 --> 00:01:44.930
从某种意义上讲 它们包含的信息要比这个表丰富得多

