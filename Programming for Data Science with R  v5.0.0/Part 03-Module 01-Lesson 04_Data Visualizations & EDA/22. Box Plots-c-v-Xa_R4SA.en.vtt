WEBVTT
Kind: captions
Language: en

00:00:00.270 --> 00:00:03.310
Let's use another type of visualization that's helpful for seeing

00:00:03.310 --> 00:00:06.230
the distribution of a variable called a box plot. Now if

00:00:06.230 --> 00:00:08.950
you're unfamiliar with a box plot, you can find resources in

00:00:08.950 --> 00:00:12.280
the instructor notes, and there's also a link to [UNKNOWN] statistic

00:00:12.280 --> 00:00:15.310
class so you can test your own knowledge. You may recall

00:00:15.310 --> 00:00:17.880
earlier that we split friend count by gender in a pair

00:00:17.880 --> 00:00:22.190
of histograms using facet wrap. The code looked like this. Instead

00:00:22.190 --> 00:00:25.360
of using these histograms we're going to generate box plots of friend

00:00:25.360 --> 00:00:28.120
count by gender, so we can quickly see the differences between

00:00:28.120 --> 00:00:31.470
the distributions. And in particular we're going to see the difference between

00:00:31.470 --> 00:00:34.490
the median of the two groups. And remember again the the

00:00:34.490 --> 00:00:38.400
q plot function automatically generates histograms (/g) when we pass it a

00:00:38.400 --> 00:00:41.550
single variable. So we need to add a parameter to tell

00:00:41.550 --> 00:00:44.430
q plot that we want a different type of plot. To

00:00:44.430 --> 00:00:48.040
do that, we're going to use the gym called box plot. Now,

00:00:48.040 --> 00:00:50.420
I'm going to use the same data set as before. So I'm going to

00:00:50.420 --> 00:00:53.980
keep this and q plot. Now, what's different about box

00:00:53.980 --> 00:00:56.320
plots is that the y axis is going to be

00:00:56.320 --> 00:00:58.980
our friend count. The x axis, on the other hand,

00:00:58.980 --> 00:01:02.080
is going to be our categorical variables for male and female, or

00:01:02.080 --> 00:01:06.150
gender. Notice that we use the continuous variables. Friend count

00:01:06.150 --> 00:01:10.100
as y. And the grouping, or the categorical variable as x.

00:01:10.100 --> 00:01:12.790
This will always be true for your box plots. I

00:01:12.790 --> 00:01:15.450
forgot a parenthesis here and then let me just reformat my

00:01:15.450 --> 00:01:18.980
code so it looks a little bit cleaner. There we go.

00:01:18.980 --> 00:01:21.380
Running this code, we can see that we get our two box

00:01:21.380 --> 00:01:24.910
plots. Let's zoom in to get a closer look. The boxes here

00:01:24.910 --> 00:01:28.170
and here cover the middle 50% of values, or what's called the

00:01:28.170 --> 00:01:31.390
inner quartile range. And I know these boxes are hard to see,

00:01:31.390 --> 00:01:34.350
since we have so many outliers on this plot. Each of these

00:01:34.350 --> 00:01:37.600
tiny little dots is an outlier in our data. We can also

00:01:37.600 --> 00:01:40.480
see that the y axis is capturing all the friend counts from

00:01:40.480 --> 00:01:43.170
zero all the way up to 5,000. So we're not

00:01:43.170 --> 00:01:46.790
omitting any user data in this plot. And finally, this horizontal

00:01:46.790 --> 00:01:48.920
line, which you may have noticed at first, is the

00:01:48.920 --> 00:01:52.380
median for the two box plots. And you might be wondering

00:01:52.380 --> 00:01:55.830
what makes an outlier an actual outlier. And well, we

00:01:55.830 --> 00:01:58.700
usually consider outliers to be just outside of, one and a

00:01:58.700 --> 00:02:02.390
half times the IQR from the media. Since there's so

00:02:02.390 --> 00:02:05.680
many outliers in these plots, let's adjust our code to focus

00:02:05.680 --> 00:02:08.860
on just these two boxes. We'll have you do this in the next

00:02:08.860 --> 00:02:12.950
programming exercise. See, if you can altar our code to make that adjustment.

